<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<context:component-scan
		base-package="com.teamproject.club_application" />

	<beans:bean name="dataSourceA" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
		<beans:property name="url" value="jdbc:oracle:thin:@localhost:1521:xe" />
		<beans:property name="username" value="ClubApplication" />
		<beans:property name="password" value="admin" />
	</beans:bean>
	
	
	 <!--<beans:bean name="dataSourceB"
		class="org.apache.commons.dbcp2.BasicDataSource"
		destroy-method="close">
		<beans:property name="driverClassName"
			value="oracle.jdbc.driver.OracleDriver" />
		<beans:property name="url"
			value="jdbc:oracle:thin:@localhost:1521:xe" />
		<beans:property name="username" value="ClubApplication" />
		<beans:property name="password" value="admin" />

		<beans:property name="initialSize" value="20" />
		<beans:property name="maxTotal" value="20" />
		<beans:property name="maxIdle" value="20" />
		<beans:property name="minIdle" value="20" />-->
		 <!-- pool이 고갈되었을 경우 최대 대기 타임 ms -->
		  <!--<beans:property name="maxWaitMillis" value="3000" />
		<beans:property name="defaultReadOnly" value="true" />
		<beans:property name="validationQuery" value="select 1 from dual" />-->
		 <!-- Evictor 설정 -->
		  <!--<beans:property name="testOnBorrow" value="false" />
		<beans:property name="testOnReturn" value="false" /> -->
		<!-- testWhileIdle 설정. 150초마다 4개의 connection 꺼내 validation query를 날려 확인 -->
		 <!--<beans:property name="testWhileIdle" value="true" />
		<beans:property name="timeBetweenEvictionRunsMillis" value="180000" />
		<beans:property name="numTestsPerEvictionRun" value="4" />
		<beans:property name="minEvictableIdleTimeMillis" value="-1" /> -->
		<!-- preparedStatement 풀링 여부 -->
		<!-- <beans:property name="poolPreparedStatements" value="true" />
		<beans:property name="maxOpenPreparedStatements" value="50" />
	</beans:bean>-->
		
	<beans:bean name="template"
		class="org.springframework.jdbc.core.JdbcTemplate">
		<beans:property name="dataSource" ref="dataSourceA" />
	</beans:bean>

	<beans:bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSourceA" />
		<beans:property name="mapperLocations"
			value="classpath:com/teamproject/club_application/DB/mapper/*.xml" />
	</beans:bean>

	<beans:bean id="sqlSession"
		class="org.mybatis.spring.SqlSessionTemplate">
		<beans:constructor-arg index="0"
			ref="sqlSessionFactory" />
	</beans:bean>


	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="10000000" />
		<beans:property name="maxInMemorySize" value="50000000" />
	</beans:bean>

	<beans:bean id="mailSender"
		class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<beans:property name="host" value="smtp.gmail.com" />
		<beans:property name="port" value="587" />
		<beans:property name="username"
			value="clubapplicationproject@gmail.com" />
		<beans:property name="password"
			value="clubApplication@admin" />
		<!-- email 요청시는 SMTP -->
		<beans:property name="javaMailProperties">
			<beans:props>
				<beans:prop key="mail.transport.protocol">smtp</beans:prop>
				<beans:prop key="mail.smtp.auth">true</beans:prop>
				<beans:prop key="mail.smtp.starttls.enable">true</beans:prop>
				<beans:prop key="mail.debug">true</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>


	<beans:bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<beans:property name="dataSource" ref="dataSourceA"></beans:property>
	</beans:bean>

</beans:beans>